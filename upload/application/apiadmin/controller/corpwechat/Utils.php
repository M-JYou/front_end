<?php


namespace app\apiadmin\controller\corpwechat;


use app\common\controller\Backend;
use app\common\lib\corpwechat\Media;
use think\Validate;

class Utils extends Backend {
  /** 企业ID
   * @var string
   */
  private $corpId = '';

  /** 应用ID
   * @var string
   */
  private $agentId = '';

  /** 应用的凭证密钥
   * @var string
   */
  private $corpSecret = '';

  /** 通讯录的凭证秘钥
   * @var string
   */
  private $customerContactSecret = '';


  public function _initialize() {
    parent::_initialize(); // TODO: Change the autogenerated stub
    $apiConfig = config('global_config.corpwechat_api');
    if (empty($apiConfig) || !isset($apiConfig) || !is_array($apiConfig)) {
      $this->ajaxReturn(500, '请先完成企业微信配置');
    }

    $is_open = $apiConfig['is_open'] ? intval($apiConfig['is_open']) : -1;

    switch ($is_open) {
      case 1:
        $this->corpId = $apiConfig['corpid'] ? $apiConfig['corpid'] : '';
        $this->agentId = $apiConfig['agentid'] ? $apiConfig['agentid'] : '';
        $this->corpSecret = $apiConfig['corpsecret'] ? $apiConfig['corpsecret'] : '';
        $this->customerContactSecret = $apiConfig['customer_contact_secret'] ? $apiConfig['customer_contact_secret'] : '';
        break;
      case 2:
        $this->ajaxReturn(500, '企微服务已关闭');

      case -1:
        $this->ajaxReturn(500, '企微服务状态异常');
    }
  }

  /** 上传图片
   * @Method uploadImage()
   *
   * @param resource $file 上传文件
   *
   * @return Jsonp
   *
   * @throws null
   *
   * @link https://qyapi.weixin.qq.com/cgi-bin/media/uploadimg?access_token=ACCESS_TOKEN
   *
   * @author  Administrator
   * @version 1.1
   * @since   2022/3/2
   */
  public function uploadImage() {
    // 接收上传文件
    $file = input('file.file');

    if (!isset($file) || empty($file)) {
      $this->ajaxReturn(500, '请选择要上传的文件');
    }

    /** 调用企业微信上传图片API */
    $upload_file = $file->getInfo();
    $media = new Media($this->corpId, $this->corpSecret);
    $multipart = [
      'multipart' => [
        'name' => 'media',
        'filename' => md5(time()),
        'contents' => fopen($upload_file['tmp_name'], 'r'),
        'headers' => [
          'Content-Type' => 'image/jpg'
        ]
      ]
    ];
    $result = $media->uploadImage($multipart);

    // 验证接口返回
    if (false === $result) {
      $this->ajaxReturn(500, $media->getError());
    }

    // 验证器验证URL
    $validate_data = [
      'result' => $result
    ];
    $rule = [
      'result' => 'require|url',
    ];

    $msg = [
      'result.url' => '上传失败'
    ];

    $validate = new Validate($rule, $msg);
    if (!$validate->check($validate_data)) {
      $this->ajaxReturn(500, $validate->getError());
    }

    $this->ajaxReturn(200, '上传成功', ['url' => $result]);
  }
}
