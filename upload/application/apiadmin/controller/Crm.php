<?php

/**
 * Created by PhpStorm.
 * User: Administrator
 * Date: 2021/5/31
 * Time: 9:26
 */

namespace app\apiadmin\controller;


use app\common\model\crm\CrmConfig;
use app\common\model\crm\CrmCustomer;
use app\common\model\crm\CrmGetLog;
use app\common\model\crm\CrmLevelLog;
use app\common\model\crm\CrmLinkman;
use app\common\model\crm\CrmOrder;
use app\common\model\crm\CrmReserveVisit;
use app\common\model\crm\CrmResume;
use app\common\model\crm\CrmResumeGetLog;
use app\common\model\crm\CrmResumeVisit;
use app\common\model\crm\CrmStatusLog;
use app\common\model\crm\CrmTask;
use app\common\model\crm\CrmTrip;
use app\common\model\crm\CrmVisitLog;

class Crm extends \app\common\controller\Backend {

  public function _initialize() {
    parent::_initialize(); // TODO: Change the autogenerated stub
    $cc = new CrmCustomer();
    $cc->checkTimeoutedBind();
  }

  public function sales_consultant() {
    $config = new CrmConfig();
    $admininfo = $this->admininfo;
    $list = $config->sales_consultant($admininfo);
    $this->ajaxReturn(200, '', $list);
  }

  /** 编辑/获取crm配置 */
  public function config() {
    $config = new CrmConfig();
    try {
      $id = input('get.id/d', 0, 'intval');
      $category = input('get.category/s', '', 'trim');
      if (request()->isPost()) {
        $res = $config->saveData($id, $category);
      } else {
        $res = $config->getData2($category, $id);
      }
      $this->ajaxReturn(200, '', $res);
    } catch (\Exception $e) {
      $this->ajaxReturn(500, $e->getMessage());
    }
  }

  public function config_save() {
    $config = new CrmConfig();
    try {
      $data = input('post.');
      $res = $config->saveAll2($data);
      $this->ajaxReturn(200, '', $res);
    } catch (\Exception $e) {
      $this->ajaxReturn(500, $e->getMessage());
    }
  }

  public function remark_customer() {
    try {
      $cc = new CrmCustomer();
      $cid =  input('post.cid/d', 0, 'intval');
      $remark =  input('post.remark/s', '', 'trim,htmlspecialchars');
      $res = $cc->remark($cid, $remark);
      $this->ajaxReturn(200, '', $res);
    } catch (\Exception $e) {
      $this->ajaxReturn(500, $e->getMessage());
    }
  }

  /** 全部客户 */
  public function all_customers() {
    $cc = new CrmCustomer();
    $res = $cc->getList(['deletetime' => 0]);
    $this->ajaxReturn(200, '', $res);
  }

  /** 我的客户 */
  public function my_customers() {
    $cc = new CrmCustomer();
    $res = $cc->getList(['sales_consultant' => $this->admininfo->id, 'deletetime' => 0]);
    $this->ajaxReturn(200, '', $res);
  }

  /** 已删除客户 */
  public function deleted_customers() {
    $cc = new CrmCustomer();
    $res = $cc->getList(['deletetime' => ['gt', 0]]);
    $this->ajaxReturn(200, '', $res);
  }
  /** 已删除客户-完全删除 */
  public function delete_customers_real() {
    $id = input('post.id/a', []);
    if (empty($id)) {
      $this->ajaxReturn(500, '请选择要删除的数据');
    }
    $cc = new CrmCustomer();
    $cc->where('id', 'in', $id)->delete();
    $this->ajaxReturn(200, '删除成功');
  }

  public function customer_info() {
    $cc = new CrmCustomer();
    $id =  input('get.id/d', 0, 'intval');
    $res = $cc->getInfo($id);
    $this->ajaxReturn(200, '', $res);
  }

  public function customer_order() {
    $cc = new CrmCustomer();
    $id =  input('get.cid/d', 0, 'intval');
    $paytype =  input('get.paytype/s', '', 'trim,htmlspecialchars');
    $serviceType = input('get.service_type/s', '', 'trim,htmlspecialchars');
    $page = input('get.page/d', 1, 'intval');
    $pageSize = input('get.page_size/d', 10, 'intval');
    $res = $cc->getSysOrder($paytype, $serviceType, $id, $page, $pageSize);
    $this->ajaxReturn(200, '', $res);
  }

  public function consume_log() {
    $cc = new CrmCustomer();
    $id =  input('get.cid/d', 0, 'intval');
    $type = input('get.type/d', 0, 'intval');
    $page = input('get.page/d', 1, 'intval');
    $pageSize = input('get.page_size/d', 10, 'intval');
    $res = $cc->getConsumeLog($id, $type, $page, $pageSize);
    $this->ajaxReturn(200, '', $res);
  }

  public function active_jobs() {
    $cc = new CrmCustomer();
    $id =  input('get.cid/d', 0, 'intval');
    $page = input('get.page/d', 1, 'intval');
    $pageSize = input('get.page_size/d', 10, 'intval');
    $res = $cc->getActiveJobs($id, $page, $pageSize);
    $this->ajaxReturn(200, '', $res);
  }

  /** 全部客户-删除客户 */
  public function delete_customers() {
    $cc = new CrmCustomer();
    $id =  input('post.id/a', [], 'filter_empty_array');
    if (empty($id)) {
      $this->ajaxReturn(500, '请选择要删除的客户');
    }
    $str = '';
    foreach ($id as $v) {
      foreach ($v as $value) {
        $str .= $value . ',';
      }
    }
    $id = substr($str, 0, strlen($str) - 1);
    $res = $cc->delCustomer($id);
    // $res = $cc->delCustomer(array_map('intval', $id));
    $this->ajaxReturn(200, '', $res);
  }

  /** 公共客户 */
  public function public_customers() {
    $cc = new CrmCustomer();
    $res = $cc->getList(['deletetime' => 0, 'sales_consultant' => 0]);
    $this->ajaxReturn(200, '', $res);
  }

  /** 系统新增客户 */
  public function new_customers() {
    $cc = new CrmCustomer();
    $keywords = input('get.keywords/s', '', 'trim,htmlspecialchars');
    $page = input('get.page/d', 1, 'intval');
    $pageSize = input('get.page_size/d', 10, 'intval');
    $res = $cc->new_company($keywords, $page, $pageSize);
    $this->ajaxReturn(200, '', $res);
  }
  /** 系统新增页面 - 删除客户 */
  public function delete_coms() {
    try {
      $cc = new CrmCustomer();
      $comIds = input('post.comids/a');
      $comIds = array_map('intval', $comIds);
      if (empty($comIds)) {
        $this->ajaxReturn(500, '请选择要删除的客户');
      }
      $r = $cc->delete_coms($comIds);
      $this->ajaxReturn(200, '', $r);
    } catch (\Exception $e) {
      $this->ajaxReturn(500, $e->getMessage());
    }
  }

  /** 企业详情 */
  public function com_info() {
    $cc = new CrmCustomer();
    $id = input('get.id/d', 0, 'intval');
    $res = $cc->com_info($id);
    return $this->ajaxReturn(200, '', $res);
  }

  /** 查重手机号 */
  public function check_mobile() {
    $cc = new CrmLinkman();
    $mobile = input('get.mobile/d', 0, 'trim,intval');
    $r = $cc->checkMobile($mobile);
    if ($r === true) {
      $this->ajaxReturn(200, '没有重复', 0);
    } else if (isset($r['id'])) {
      // 更改提示信息 chenyang 2022年3月11日10:39:34
      $name = !empty($r['com']['company_name']) ? $r['com']['company_name'] : $r['com']['title'];
      $message = '该手机号已与 【' . $name . '】 重复';
      $this->ajaxReturn(200, $message, $r);
    } else {
      $this->ajaxReturn(500, $r);
    }
  }

  /** 查重客户名 */
  public function check_title() {
    $cc = new CrmCustomer();
    $title = input('get.title/s', '', 'trim,htmlspecialchars');
    $match = input('get.total_match/d', 0, 'intval');
    if ($match) {
      $info = $cc->where(['title' => $title])->column('id,title,comid,company_name,sales_consultant');
    } else {
      $info = $cc->where(['title' => ['like', '%' . $title . '%']])->column('id,title,comid,company_name,sales_consultant');
    }
    if (count($info) > 0) $info = array_slice($info, 0, 10);
    $this->ajaxReturn(200, '', $info);
  }

  public function check_com_title() {
    $cc = new CrmCustomer();
    $title = input('get.title/s', '', 'trim,htmlspecialchars');
    $list = $cc->check_com_title($title);
    $this->ajaxReturn(200, '', $list);
  }

  /** 导入客户 */
  public function import_customer() {
    try {
      $cc = new CrmCustomer();
      $sales_consultant = input('post.sales_consultant/d', 0, 'intval');
      $data = [
        'comid' => input('post.comid/d', 0, 'intval'),
        'company_name' => input('post.company_name/s', '', 'trim,htmlspecialchars'),
        'title' => input('post.title/s', '', 'trim,htmlspecialchars'),
        'status' =>  input('post.status/d', 1, 'intval'), //状态大于0
        'level' =>  input('post.level/d', 1, 'intval'), //等级大于0
        'com_addr' => input('post.com_addr/s', '', 'trim,htmlspecialchars'),
      ];
      if ($sales_consultant) {
        $data['sales_consultant'] = $sales_consultant;
        $data['bind_change_time'] = time();
      }
      if (!$data['comid']) {
        $data['company_name'] = '';
      }
      $linkman = [
        'name' => input('post.linkman_name/s', '', 'trim,htmlspecialchars'),
        'gender' =>  input('post.linkman_gendor/d', 0, 'trim,intval'),
        'position' => input('post.linkman_position/s', '', 'trim,htmlspecialchars'),
        'appellation' => input('post.linkman_appellation/s', '', 'trim,htmlspecialchars'),
        'mobile' =>  input('post.linkman_mobile/d', 0, 'trim,intval'),
        'telephone' => input('post.linkman_telephone/s', '', 'trim,htmlspecialchars'),
        'email' =>  input('post.linkman_email/s', '', 'trim,htmlspecialchars'),
        'qq' => input('post.linkman_qq/d', 0, 'intval'),
      ];
      $force = input('post.force/d', 0, 'intval');
      $r = $cc->import_customer($data, $linkman, $this->admininfo, $force);
      if ($r) {
        $this->ajaxReturn(200, '导入成功', $r);
      } else {
        $this->ajaxReturn(500, '导入失败');
      }
    } catch (\Exception $e) {
      $this->ajaxReturn(501, '导入失败:' . $e->getMessage());
    }
  }

  /** 转交 */
  public function set_sc() {
    $cids =  input('post.cids/a');
    $sc = input('post.sc_id/d', 0, 'intval');
    $remark = input('post.remark/s', '', 'trim,htmlspecialchars');
    try {
      $cc = new CrmCustomer();
      $cc->set_sc($cids, $sc, $remark, $this->admininfo->id);
      $this->ajaxReturn(200, '转交成功', 1);
    } catch (\Exception $e) {
      $this->ajaxReturn(500, $e->getMessage());
    }
  }

  /** 领取客户 */
  public function receive_customer() {
    $cids =  input('post.cids/a');
    $sc = $this->admininfo->id;
    $remark = input('post.remark/s', '', 'trim,htmlspecialchars');
    try {
      $cc = new CrmCustomer();
      $cc->set_sc($cids, $sc, $remark, $this->admininfo->id);
      $this->ajaxReturn(200, '领取成功', 1);
    } catch (\Exception $e) {
      $this->ajaxReturn(500, $e->getMessage());
    }
  }

  /** 添加/追加跟进记录 */
  public function add_visit_log() {
    try {
      $vl = new CrmVisitLog();
      $data = [
        'cid' =>    input('post.cid/d', 0, 'intval'),
        'method' =>  input('post.method/d', 0, 'intval'),
        'call_result' =>  input('post.call_result/d', 0, 'intval'),
        'result' =>  input('post.result/s', '', 'trim'),
        'linkman' =>  input('post.linkman/s', 0, 'intval'),
        'sc_id' => $this->admininfo->id
      ];
      $status =  input('post.status/d', 0, 'intval');
      $id =  input('post.id/d', 0, 'intval');
      $vl->saveData($status, $data, $id, $this->admininfo);
      $this->ajaxReturn(200, '保存成功');
    } catch (\Exception $e) {
      $this->ajaxReturn(500, $e->getMessage());
    }
  }

  public function visit_status() {
    $vl = new CrmVisitLog();
    $this->ajaxReturn(200, '', $vl->visit_status);
  }

  /** 跟进记录列表 */
  public function visit_log() {
    $page = input('get.page/d', 1, 'intval');
    $pageSize = input('get.page_size/d', 10, 'intval');
    $method = input('get.method/d', 0, 'intval');
    $scid = input('get.sc_id/d', 0, 'intval');
    $cid = input('get.cid/d', 0, 'intval');
    $owner_sc_id = input('get.owner_sc_id/d', 0, 'intval');
    $status = input('get.status/d', 0, 'intval');
    $title = input('get.title/s', '', 'trim,htmlspecialchars');
    $callResult =  input('get.call_result/s', '', 'trim');
    $options = [];
    if ($method) $options['method'] = $method;
    if ($scid) $options['sc_id'] = $scid;
    if ($cid) $options['cid'] = $cid;
    $hasWhere = [];
    if ($owner_sc_id) $hasWhere['sales_consultant'] = $owner_sc_id;
    if ($status) $hasWhere['status'] = $status;
    if ($title) $hasWhere['title'] = ['like', "%$title%"];
    if ($callResult === '') $callResult = -1;
    if (in_array($callResult, [0, 1])) {
      $options['method'] = 2;
      $options['call_result'] = $callResult;
    }
    $vl = new CrmVisitLog();
    $res = $vl->getList($options, $hasWhere, $page, $pageSize);
    $this->ajaxReturn(200, '', $res);
  }

  /** 添加/编辑预约记录 */
  public function add_reserve_visit() {
    $rv = new CrmReserveVisit();
    $addtime = input('post.pre_time/s', 'today', 'trim');
    $addtime = strtotime($addtime);
    $data = [
      'pre_time' => $addtime,
      'cid' =>  input('post.cid/d', 0, 'intval'),
      'content' =>  input('post.content/s', '', 'trim,htmlspecialchars'),
      'sc_id' => $this->admininfo->id,
      'addtime' => time()
    ];
    $id =  input('post.id/d', 0, 'intval');
    try {
      $rv->saveData($data, $id);
      $this->ajaxReturn(200, '保存成功');
    } catch (\Exception $e) {
      $this->ajaxReturn(500, $e->getMessage());
    }
  }

  /** 预约记录 */
  public function reserve_visit_list() {
    $rv = new CrmReserveVisit();
    $cid =     input('get.cid/d', 0, 'intval');
    $page = input('get.page/d', 1, 'intval');
    $pageSize = input('get.page_size/d', 10, 'intval');
    $res = $rv->getList($cid, $page, $pageSize);
    $this->ajaxReturn(200, '', $res);
  }

  /** 删除预约记录 */
  public function del_reserve_visit() {
    $rv = new CrmReserveVisit();
    $cid =     input('post.cid/d', 0, 'intval');
    $id = input('post.id/d', 0, 'intval');
    $res = $rv->where(['id' => $id, 'cid' => $cid])->delete();
    $rv->setLastReserve($cid);
    $this->ajaxReturn(200, '删除成功', $res);
  }

  /** 预约记录-设置回访状态 */
  public function set_reserve_visit_status() {

    $rv = new CrmReserveVisit();
    $id = input('post.id/d', 0, 'intval');
    $cid =     input('post.cid/d', 0, 'intval');
    $done = input('post.done/d', 0, 'intval');
    $res = $rv->save(['visit_time' => $done ? time() : 0], ['id' => $id, 'cid' => $cid]);
    $rv->setLastReserve($cid);
    $this->ajaxReturn(200, '操作成功', $res);
  }
  /** 联系人列表 */
  public function linkman_list() {
    try {
      $id = input('get.id/d', 0, 'intval');
      $lkModel = new CrmLinkman();
      $res = $lkModel->linkman_list($id);
      $this->ajaxReturn(200, '', $res);
    } catch (\Exception $e) {
      $this->ajaxReturn(501, $e->getMessage());
    }
  }

  /** 添加/编辑联系人 */
  public function add_linkman() {
    try {
      $lkModel = new CrmLinkman();
      $res = $lkModel->saveData();
      $this->ajaxReturn(200, '保存成功', $res);
    } catch (\Exception $e) {
      $this->ajaxReturn(500, $e->getMessage());
    }
  }
  /** 设置主要联系人 */
  public function set_master_linkman() {
    try {
      $cid = input('post.cid/d', 0, 'intval');
      $linkman_id = input('post.linkman_id/d', 0, 'intval');
      $lkModel = new CrmLinkman();
      $res = $lkModel->set_master_linkman($cid, $linkman_id);
      $this->ajaxReturn(200, '设置成功', $res);
    } catch (\Exception $e) {
      $this->ajaxReturn(500, $e->getMessage());
    }
  }
  /** 删除联系人 */
  public function del_linkman() {
    try {
      $linkman_id = input('post.linkman_id/d', 0, 'intval');
      $lkModel = new CrmLinkman();
      $res = $lkModel->del_linkman($linkman_id);
      $this->ajaxReturn(200, '删除成功', $res);
    } catch (\Exception $e) {
      $this->ajaxReturn(500, $e->getMessage());
    }
  }
  /** 给企业设置标签 */
  public function set_labels() {
    try {
      $cids = input('post.cids/a', []);
      $labels = input('post.labels/a', []);
      $lkModel = new CrmCustomer();
      $res = $lkModel->set_labels($cids, $labels);
      $this->ajaxReturn(200, '', $res);
    } catch (\Exception $e) {
      $this->ajaxReturn(500, $e->getMessage());
    }
  }
  /** 给企业设置状态 - 成交客户和暂停客户状态不可改变 */
  public function set_status() {
    try {
      $cid = input('post.cid/d', 0, 'intval');
      $status = input('post.status/d', 0, 'intval');
      $lkModel = new CrmCustomer();
      $res = $lkModel->set_status($cid, $status, $this->admininfo->id);
      $this->ajaxReturn(200, '', $res);
    } catch (\Exception $e) {
      $this->ajaxReturn(500, $e->getMessage());
    }
  }

  public function set_level() {
    try {
      $cid = input('post.cid/d', 0, 'intval');
      $level = input('post.level/d', 0, 'intval');
      $m = new CrmCustomer();
      $res = $m->set_level($cid, $level, $this->admininfo->id);
      $this->ajaxReturn(200, '', $res);
    } catch (\Exception $e) {
      $this->ajaxReturn(500, $e->getMessage());
    }
  }
  /** 给客户绑定系统企业 */
  public function bind_customer() {
    $id = input('post.id/d', 0, 'intval');
    $comid = input('post.comid/d', 0, 'intval');
    $cc = new CrmCustomer();
    if (!$id || !$comid) {
      $this->ajaxReturn(500, '参数错误');
    }
    try {
      $cc->bind_customer($id, $comid);
      $this->ajaxReturn(200, '绑定成功');
    } catch (\Exception $e) {
      $this->ajaxReturn(501, '绑定失败:' . $e->getMessage());
    }
  }

  public function unbind_customer() {
    $id = input('post.id/d', 0, 'intval');
    $cc = new CrmCustomer();
    $cc->unbind_customer($id);
    $this->ajaxReturn(200, '解绑成功');
  }

  /** 转交记录 */
  public function trans_log() {
    $log = new CrmGetLog();
    $cid =     input('get.cid/d', 0, 'intval');
    $page = input('get.page/d', 1, 'intval');
    $pageSize = input('get.page_size/d', 10, 'intval');
    $res = $log->getList($cid, $page, $pageSize);
    $this->ajaxReturn(200, '', $res);
  }

  /** 订单录入 */
  public function add_order() {
    $rv = new CrmOrder();
    $data = [
      'crm_title' =>  input('post.title/s', '', 'trim,htmlspecialchars'),
      'cid' =>  input('post.cid/d', 0, 'intval'),
      'paytype' =>  input('post.paytype/s', '', 'trim,htmlspecialchars'),
      'ordertype' => input('post.ordertype/d', 0, 'intval'),
      'addtime' => time(),
      'paytime' => strtotime(input('post.paytime', '', 'trim')),
      'sc_id' =>  input('post.sc_id/d', $this->admininfo->id, 'intval'),
      'remark' => input('post.remark/s', '', 'trim,htmlspecialchars'),
      'amount' => input('post.amount/s', 0, 'trim'),
      'sys_order_id' => input('post.sys_order_id', '', 'trim,htmlspecialchars')
    ];
    $data['amount'] *= 100;
    try {
      $rv->saveData($data);
      $this->ajaxReturn(200, '录入成功');
    } catch (\Exception $e) {
      $this->ajaxReturn(500, $e->getMessage());
    }
  }

  /** 业务订单 */
  public function sys_orders() {
    $m = new CrmOrder();
    $page = input('get.page/d', 1, 'intval');
    $pageSize = input('get.page_size/d', 10, 'intval');
    $start = input('get.start/s', '', 'trim');
    $mine = input('get.mine/d', 0, 'intval');
    $status = input('get.status/s', '', 'trim');
    $paytype = input('get.paytype/s', '', 'trim');
    $ordertype = input('get.ordertype/d', 0, 'intval');
    $data = [];
    if ($start) {
      $data['a.paytime'] = ['gt', strtotime($start)];
    }
    if ($mine > 0) {
      $data['d.sales_consultant'] = $mine;
    }
    if ($status !== '') $data['a.status'] = intval($status);
    if ($paytype) $data['a.payment'] = $paytype;
    if ($ordertype) $data['a.service_type'] = $ordertype;
    $res = $m->getSysList($data, $page, $pageSize);
    $this->ajaxReturn(200, '', $res);
  }

  /** 全部业绩 */
  public function all_performance() {
    $m = new CrmOrder();
    $page = input('get.page/d', 1, 'intval');
    $pageSize = input('get.page_size/d', 10, 'intval');
    $ordertype = input('get.ordertype/d', 0, 'intval');
    $sc_id = input('get.sc_id/d', 0, 'intval');
    $paytype = input('get.paytype/s', '', 'trim');
    $status = input('get.status/s', '', 'trim');
    $data = [];
    if ($ordertype) $data['ordertype'] = $ordertype;
    if ($status !== '' && $status != -1) $data['status'] = $status;
    if ($paytype) $data['paytype'] = $paytype;
    if ($sc_id) $data['sc_id'] = $sc_id;
    $res = $m->getList($data, $page, $pageSize);
    $this->ajaxReturn(200, '', $res);
  }

  /** 我的业绩 */
  public function my_performance() {
    $m = new CrmOrder();
    $page = input('get.page/d', 1, 'intval');
    $pageSize = input('get.page_size/d', 10, 'intval');
    $ordertype = input('get.ordertype/d', 0, 'intval');
    $paytype = input('get.paytype/s', '', 'trim');
    $status = input('get.status/s', '', 'trim');
    $data = ['sc_id' => $this->admininfo->id];
    if ($ordertype) $data['ordertype'] = $ordertype;
    if ($status !== '' && $status != -1) $data['status'] = $status;
    if ($paytype) $data['paytype'] = $paytype;
    $res = $m->getList($data, $page, $pageSize);
    $this->ajaxReturn(200, '', $res);
  }
  /** 订单-实收 */
  public function real_income() {
    $rv = new CrmOrder();
    $data = [
      'cid' =>  input('post.cid/d', 0, 'intval'),
      'paytype' =>  input('post.paytype/s', '', 'trim'),
      'ordertype' => input('post.ordertype/d', 0, 'intval'),
      'addtime' => time(),
      'sc_id' =>  input('post.sc_id/d', $this->admininfo->id, 'intval'),
      'remark' => input('post.remark/s', '', 'trim,htmlspecialchars'),
      'amount' => input('post.amount/s', 0, 'trim'),
      'paytime' => strtotime(input('post.paytime', '', 'trim')),
      'sys_order_id' => input('post.sys_order_id/s', '', 'trim,htmlspecialchars'),
    ];
    $data['amount'] *= 100;
    try {
      $pk = $rv->saveData($data);
      $data['id'] = $pk;
      $this->ajaxReturn(200, '保存成功', $data);
    } catch (\Exception $e) {
      $this->ajaxReturn(500, $e->getMessage());
    }
  }
  /**  订单-核算 */
  public function confirm_orders() {
    $m = new CrmOrder();
    $orderid = input('post.orderid/a', []);
    try {
      $r = $m->confirm($orderid);
      if ($r) {
        $this->ajaxReturn(200, '核算成功', $r);
      } else {
        $this->ajaxReturn(400, '核算失败', $r);
      }
    } catch (\Exception $e) {
      $this->ajaxReturn(500, $e->getMessage());
    }
  }

  public function remark_order() {
    $m = new CrmOrder();
    $orderid = input('post.orderid/d', 0, 'intval');
    $remark =   input('post.remark/s', '', 'trim,htmlspecialchars');
    try {
      $r = $m->remark($orderid, $remark);
      if ($r) {
        $this->ajaxReturn(200, '保存成功', $r);
      } else {
        $this->ajaxReturn(400, '保存失败', $r);
      }
    } catch (\Exception $e) {
      $this->ajaxReturn(500, $e->getMessage());
    }
  }

  /**  业绩-变更客服 */
  public function order_edit_sc() {
    $m = new CrmOrder();
    $orderid = input('post.orderid/d', 0, 'intval');
    $cid = input('post.cid/d', 0, 'intval');
    $tosc = input('post.tosc/d', 0, 'intval');
    try {
      $r = $m->change_sc($orderid, $cid, $tosc);
      if ($r) {
        $this->ajaxReturn(200, '变更成功');
      } else {
        $this->ajaxReturn(400, '变更失败');
      }
    } catch (\Exception $e) {
      $this->ajaxReturn(500, $e->getMessage());
    }
  }

  public function sys_order_info() {
    $m = new CrmOrder();
    $oid =   input('get.oid/s', '', 'trim,htmlspecialchars');
    $res = $m->getSysOrderInfo($oid);
    $this->ajaxReturn(200, '', $res);
  }

  public function add_task() {
    $m = new CrmTask();
    $data = [
      'title' =>  input('post.title/s', '', 'trim,htmlspecialchars'),
      'create_sc_id' => $this->admininfo->id,
      'type' =>  input('post.type/d', 0, 'intval'),
      'resolve_sc_id' => input('post.resolve_sc_id/d', 0, 'intval'),
    ];
    try {
      $id = input('post.id/d', 0, 'intval');
      $r = $m->saveData($data, $id);
      $this->ajaxReturn(200, '创建成功', $r);
    } catch (\Exception $e) {
      $this->ajaxReturn(500, $e->getMessage());
    }
  }
  public function trans_task() {
    $m = new CrmTask();
    $data = [
      'resolve_sc_id' => input('post.resolve_sc_id/d', 0, 'intval'),
    ];
    try {
      $id = input('post.id/d', 0, 'intval');
      if (!$id) exception('非法参数');
      $r = $m->saveData($data, $id);
      $this->ajaxReturn(200, '创建成功', $r);
    } catch (\Exception $e) {
      $this->ajaxReturn(500, $e->getMessage());
    }
  }

  public function del_task() {
    $m = new CrmTask();
    try {
      $id = input('post.id/a');
      $id = array_map('intval', $id);
      if (!$id) exception('非法参数');
      $r = $m->where(['id' => ['in', $id], 'create_sc_id' => $this->admininfo->id])->delete();
      $this->ajaxReturn(200, '删除成功', $r);
    } catch (\Exception $e) {
      $this->ajaxReturn(500, $e->getMessage());
    }
  }

  public function complete_task() {
    $m = new CrmTask();
    $data = [
      'result' =>  input('post.result/s', '', 'trim,htmlspecialchars'),
      'complete_time' => time(),
      'resolve_sc_id' => $this->admininfo->id,
    ];
    $id = input('post.id/d', 0, 'intval');
    try {
      $r = $m->saveData($data, $id);
      $this->ajaxReturn(200, '保存成功', $r);
    } catch (\Exception $e) {
      $this->ajaxReturn(500, $e->getMessage());
    }
  }
  public function all_task() {
    $m = new CrmTask();
    $page = input('get.page/d', 1, 'intval');
    $pageSize = input('get.page_size/d', 10, 'intval');
    $create_sc_id =  input('get.create_sc_id/d', 0, 'intval');
    $resolve_sc_id =  input('get.resolve_sc_id/d', 0, 'intval');
    $type =  input('get.type/d', 0, 'intval');
    $create_start = input('get.create_start/s', '', 'trim');
    $create_end = input('get.create_end/s', '', 'trim');
    $complete_start = input('get.complete_start/s', '', 'trim');
    $complete_end = input('get.complete_end/s', '', 'trim');
    $isComplete =  input('get.is_complete/s', '', 'trim');
    $title = input('get.title/s', '', 'trim,htmlspecialchars');

    $where = [];
    if ($create_sc_id) $where['create_sc_id'] = $create_sc_id;
    if ($resolve_sc_id) $where['resolve_sc_id'] = $resolve_sc_id;
    if ($type) $where['type'] = $type;
    if ($title) $where['title'] = ['like', "%$title%"];
    if ($create_start && $create_end) {
      $where['addtime'] = ['between', [strtotime($create_start), strtotime($create_end) + 86400 - 1]];
    }
    if ($isComplete === '') $isComplete = -1;
    if (in_array($isComplete, [0, 1])) {
      $where['complete_time'] = $isComplete ?  ['gt', 0] : 0;
    }
    if ($complete_end && $complete_start) {
      $where['complete_time'] = ['between', [strtotime($complete_start), strtotime($complete_end) + 86400 - 1]];
    }
    $res = $m->getList($where, $page, $pageSize);
    $this->ajaxReturn(200, '', $res);
  }
  public function my_task() {
    $m = new CrmTask();
    $page = input('get.page/d', 1, 'intval');
    $pageSize = input('get.page_size/d', 10, 'intval');
    $create_sc_id =  input('get.create_sc_id/d', 0, 'intval');
    $type =  input('get.type/d', 0, 'intval');
    $isComplete =  input('get.is_complete/d', -1, 'intval');
    $create_start = input('get.create_start/s', '', 'trim');
    $create_end = input('get.create_end/s', '', 'trim');
    $complete_start = input('get.complete_start/s', '', 'trim');
    $complete_end = input('get.complete_end/s', '', 'trim');
    $title = input('get.title/s', '', 'trim,htmlspecialchars');
    $where = [];
    if ($title) $where['title'] = ['like', "%$title%"];
    if ($create_sc_id) $where['create_sc_id'] = $create_sc_id;
    $where['resolve_sc_id'] = $this->admininfo->id;
    if ($type) $where['type'] = $type;
    if ($create_start && $create_end) {
      $where['addtime'] = ['between', [strtotime($create_start), strtotime($create_end)]];
    }
    if ($isComplete > -1) {
      $where['complete_time'] = $isComplete ?  ['gt', 0] : 0;
    }
    if ($complete_end && $complete_start) {
      $where['complete_time'] = ['between', [strtotime($complete_start), strtotime($complete_end)]];
    }

    $res = $m->getList($where, $page, $pageSize);
    $this->ajaxReturn(200, '保存成功', $res);
  }
  public function my_task2() {
    $m = new CrmTask();
    $page = input('get.page/d', 1, 'intval');
    $pageSize = input('get.page_size/d', 10, 'intval');
    $resolve_sc_id =  input('get.resolve_sc_id/d', 0, 'intval');
    $type =  input('get.type/d', 0, 'intval');
    $create_start = input('get.create_start/s', '', 'trim');
    $create_end = input('get.create_end/s', '', 'trim');
    $complete_start = input('get.complete_start/s', '', 'trim');
    $complete_end = input('get.complete_end/s', '', 'trim');
    $isComplete =  input('get.is_complete/s', '', 'trim');
    $title = input('get.title/s', '', 'trim,htmlspecialchars');
    $where = [];
    if ($title) $where['title'] = ['like', "%$title%"];
    $where['create_sc_id'] = $this->admininfo->id;
    if ($resolve_sc_id) $where['resolve_sc_id'] = $resolve_sc_id;
    if ($type) $where['type'] = $type;
    if ($create_start && $create_end) {
      $where['addtime'] = ['between', [strtotime($create_start), strtotime($create_end)]];
    }
    if ($isComplete !== '') {
      $where['complete_time'] = $isComplete ?  ['gt', 0] : 0;
    }
    if ($complete_end && $complete_start) {
      $where['complete_time'] = ['between', [strtotime($complete_start), strtotime($complete_end)]];
    }
    $res = $m->getList($where, $page, $pageSize);
    $this->ajaxReturn(200, '保存成功', $res);
  }
  public function add_trip() {
    $m = new CrmTrip();
    $outtime =  input('post.out_time/s', '', 'trim');
    $backtime =  input('post.back_time/s', '', 'trim');
    $data = [
      'remark' =>  input('post.remark/s', '', 'trim,htmlspecialchars'),
      'sc_id' => $this->admininfo->id,
      'job_type' =>  input('post.job_type/d', 0, 'intval'),
      'customer_name' => input('post.customer_name/s', '', 'trim,htmlspecialchars'),
      'linkman_name' => input('post.linkman_name/s', '', 'trim,htmlspecialchars'),
      'mobile' => input('post.mobile/s', '', 'trim,htmlspecialchars'),
      'telephone' => input('post.telephone/s', '', 'trim,htmlspecialchars'),
      'out_time' =>  $outtime ? strtotime($outtime) : time(),
      'back_time' =>  $backtime ? strtotime($backtime) : 0,
    ];
    try {
      $r = $m->saveData($data);
      $this->ajaxReturn(200, '创建成功', $r);
    } catch (\Exception $e) {
      $this->ajaxReturn(500, $e->getMessage());
    }
  }

  public function end_trip() {
    $m = new CrmTrip();
    try {
      $id = input('post.id/d', 0, 'intval');
      if (!$id) exception('非法参数');
      $r = $m->save(['back_time' => time()], ['id' => $id, 'sc_id' => $this->admininfo->id]);
      $this->ajaxReturn(200, '操作成功', $r);
    } catch (\Exception $e) {
      $this->ajaxReturn(500, $e->getMessage());
    }
  }

  public function del_trip() {
    $m = new CrmTrip();
    try {
      $id = input('post.id/a');
      $id = array_map('intval', $id);
      if (!$id) exception('非法参数');
      $r = $m->where(['id' => ['in', $id]])->delete();
      $this->ajaxReturn(200, '删除成功', $r);
    } catch (\Exception $e) {
      $this->ajaxReturn(500, $e->getMessage());
    }
  }

  public function trip_info() {
    $m = new CrmTrip();
    $id = input('get.id/d', 0, 'intval');
    $res = $m->getInfo($id);
    $this->ajaxReturn(200, '', $res);
  }

  public function all_trip() {
    $m = new CrmTrip();
    $start =  input('get.days/d', 0, 'intval');
    $jobType =  input('get.job_type/d', 0, 'intval');
    $scId =  input('get.sc_id/d', 0, 'intval');
    $page = input('get.page/d', 1, 'intval');
    $pageSize = input('get.page_size/d', 10, 'intval');
    $keyType =  input('get.key_type/d', 0, 'intval');
    $keywords = input('get.keywords/s', '', 'trim,htmlspecialchars');
    $options = [];
    if ($start) {
      $options['out_time'] = ['gt', time() - $start * 86400];
    }
    if ($scId) $options['sc_id'] = $scId;
    if ($jobType) $options['job_type'] = $jobType;
    if ($keywords) {
      if ($keyType == 0) {
        $options['customer_name'] = ['like', "%$keywords%"];
      } else if ($keyType == 1) {
        $options['linkman_name'] = ['like', "%$keywords%"];
      } else if ($keyType == 2) {
        $options['mobile'] = ['like', "%$keywords%"];
      }
    }
    $res = $m->getList($options, $page, $pageSize);
    $this->ajaxReturn(200, '', $res);
  }

  public function my_trip() {
    $m = new CrmTrip();
    $start =  input('get.days/d', 0, 'intval');
    $jobType =  input('get.job_type/d', 0, 'intval');
    $page = input('get.page/d', 1, 'intval');
    $pageSize = input('get.page_size/d', 10, 'intval');
    $keyType =  input('get.key_type/d', 0, 'intval');
    $keywords = input('get.keywords/s', '', 'trim,htmlspecialchars');
    $options = ['sc_id' => $this->admininfo->id];
    if ($start) {
      $options['out_time'] = ['gt', time() - $start * 86400];
    }
    if ($jobType) $options['job_type'] = $jobType;
    if ($keywords) {
      if ($keyType == 0) {
        $options['customer_name'] = ['like', "%$keywords%"];
      } else if ($keyType == 1) {
        $options['linkman_name'] = ['like', "%$keywords%"];
      } else if ($keyType == 2) {
        $options['mobile'] = ['like', "%$keywords%"];
      }
    }
    $res = $m->getList($options, $page, $pageSize);
    $this->ajaxReturn(200, '', $res);
  }

  public function all_resume() {
    $m = new CrmResume();
    $page = input('get.page/d', 1, 'intval');
    $pageSize = input('get.page_size/d', 10, 'intval');
    $audit =  input('get.audit/s',  '', 'trim');
    $sc_id = input('get.sc_id/d', 0, 'intval');
    $options = [];
    if ($sc_id) $options['b.sc_id'] = $sc_id;
    $keyType =  input('get.key_type/d', 0, 'intval');
    $keywords = input('get.keywords/s', '', 'trim,htmlspecialchars');
    if ($keywords) {
      if ($keyType == 0) {
        $options['a.fullname'] = ['like', "%$keywords%"];
      } else if ($keyType == 1) {
        $options['c.mobile'] = ['like', "%$keywords%"];
      } else if ($keyType == 2) {
        $options['a.id'] = intval($keywords);
      } else if ($keyType == 3) {
        $options['a.uid'] = intval($keywords);
      }
    }
    if ($audit === '') $audit = -1;
    if (in_array($audit, [0, 1, 2])) $options['a.audit'] = $audit;
    $res = $m->getList($options, $page, $pageSize);
    $this->ajaxReturn(200, '', $res);
  }

  public function resume_info() {
    $m = new CrmResume();
    $uid = input('get.uid/d', 1, 'intval');
    $res = $m->getInfo($uid);
    $this->ajaxReturn(200, '', $res);
  }

  public function my_resume() {
    $m = new CrmResume();
    $page = input('get.page/d', 1, 'intval');
    $pageSize = input('get.page_size/d', 10, 'intval');
    $audit =  input('get.audit/s',  '', 'trim');
    $options = ['a.sc_id' => $this->admininfo->id];
    $keyType =  input('get.key_type/d', 0, 'intval');
    $keywords = input('get.keywords/s', '', 'trim,htmlspecialchars');
    if ($keywords) {
      if ($keyType == 0) {
        $options['b.fullname'] = ['like', "%$keywords%"];
      } else if ($keyType == 1) {
        $options['c.mobile'] = ['like', "%$keywords%"];
      } else if ($keyType == 2) {
        $options['b.id'] = intval($keywords);
      } else if ($keyType == 3) {
        $options['b.uid'] = intval($keywords);
      }
    }
    if ($audit === '') $audit = -1;
    if (in_array($audit, [0, 1, 2])) $options['b.audit'] = $audit;
    $res = $m->getList2($options, $page, $pageSize);
    $this->ajaxReturn(200, '', $res);
  }

  public function get_resume() {
    $m = new CrmResume();
    $log = new CrmResumeGetLog();
    $data = [
      'sc_id' => $this->admininfo->id,
      'uid' => input('post.uid/d', 0, 'intval'),
    ];
    try {
      $r = $m->saveData($data);
      $log->insertOne($data['uid'], $this->admininfo->id, 0, CrmResumeGetLog::FETCH, '从公海领取', $this->admininfo->id);
      $this->ajaxReturn(200, '领取成功', $r);
    } catch (\Exception $e) {
      $this->ajaxReturn(500, $e->getMessage());
    }
  }

  public function trans_resume() {
    $m = new CrmResume();
    $log = new CrmResumeGetLog();
    $data = [
      'sc_id' => input('post.sc_id/d', 0, 'intval'),
      'uid' => input('post.uid/d', 0, 'intval'),
    ];
    try {
      $r = $m->saveData($data);
      $row = $m->where(['uid' => $data['uid']])->find();
      $log->insertOne($data['uid'], $this->admininfo->id, $row['sc_id'], CrmResumeGetLog::TRANSFER, '转交', $this->admininfo->id);
      $this->ajaxReturn(200, '转交成功', $r);
    } catch (\Exception $e) {
      $this->ajaxReturn(500, $e->getMessage());
    }
  }

  public function del_resume() {
    $m = new CrmResume();
    $log = new CrmResumeGetLog();
    $uid = input('post.uid/d', 0, 'intval');
    try {
      $row = $m->where(['uid' => $uid])->find();
      if ($row['sc_id'] != $this->admininfo->id) exception('非法操作');
      $r = $m->where(['uid' => $uid])->delete();
      $log->insertOne($uid, 0, $row['sc_id'], CrmResumeGetLog::TRANSFER, '删除', $this->admininfo->id);
      $this->ajaxReturn(200, '删除成功', $r);
    } catch (\Exception $e) {
      $this->ajaxReturn(500, $e->getMessage());
    }
  }

  public function all_resume_visit() {
    $m = new CrmResumeVisit();
    $page = input('get.page/d', 1, 'intval');
    $pageSize = input('get.page_size/d', 10, 'intval');
    $res = $m->getList([], $page, $pageSize);
    $this->ajaxReturn(200, '', $res);
  }

  public function my_resume_visit() {
    $m = new CrmResumeVisit();
    $page = input('get.page/d', 1, 'intval');
    $pageSize = input('get.page_size/d', 10, 'intval');
    $uid = input('get.uid/d', 0, 'intval');
    $res = $m->getList(['uid' => $uid], $page, $pageSize);
    $this->ajaxReturn(200, '', $res);
  }

  public function add_resume_visit() {
    try {
      $vl = new CrmResumeVisit();
      $data = [
        'uid' =>    input('post.uid/d', 0, 'intval'),
        'method' =>  input('post.method/d', 0, 'intval'),
        'call_result' =>  input('post.call_result/d', 0, 'intval'),
        'result' =>  input('post.result/s', '', 'trim,htmlspecialchars'),
        'sc_id' => $this->admininfo->id
      ];
      $id =  input('post.id/d', 0, 'intval');
      $r = $vl->saveData($data, $id, $this->admininfo);
      $this->ajaxReturn(200, '保存成功', $r);
    } catch (\Exception $e) {
      $this->ajaxReturn(500, $e->getMessage());
    }
  }

  public function remark_resume() {
    try {
      $m = new CrmResume();
      $uid =  input('post.uid/d', 0, 'intval');
      $remark = input('post.remark/s', '', 'trim,htmlspecialchars');
      $m->save(['remark' => $remark], ['uid' => $uid]);
      $this->ajaxReturn(200, '保存成功', 1);
    } catch (\Exception $e) {
      $this->ajaxReturn(500, $e->getMessage());
    }
  }

  public function edit_title() {
    $cc = new CrmCustomer();
    $id =  input('post.id/d', 0, 'intval');
    $title =  input('post.title/s', '', 'trim,htmlspecialchars');
    try {
      $r = $cc->edit_title($id, $title);
      $this->ajaxReturn(200, '保存成功', $r);
    } catch (\Exception $e) {
      $this->ajaxReturn(500, $e->getMessage());
    }
  }

  public function status_change_log() {
    $log = new CrmStatusLog();
    $cid = input('get.cid/d', 0, 'intval');
    $page = input('get.page/d', 1, 'intval');
    $pageSize = input('get.page_size/d', 10, 'intval');
    $res = $log->getList(['cid' => $cid], $page, $pageSize);
    $this->ajaxReturn(200, '', $res);
  }

  public function level_change_log() {
    $log = new CrmLevelLog();
    $cid = input('get.cid/d', 0, 'intval');
    $page = input('get.page/d', 1, 'intval');
    $pageSize = input('get.page_size/d', 10, 'intval');
    $res = $log->getList(['cid' => $cid], $page, $pageSize);
    $this->ajaxReturn(200, '', $res);
  }

  public function edit_addr() {
    $cc = new CrmCustomer();
    $id =  input('post.id/d', 0, 'intval');
    $addr =  input('post.addr/s', '', 'trim,htmlspecialchars');
    try {
      $r = $cc->edit_addr($id, $addr);
      $this->ajaxReturn(200, '保存成功');
    } catch (\Exception $e) {
      $this->ajaxReturn(500, $e->getMessage());
    }
  }

  public function renew() {
    $cc = new CrmCustomer();
    $id =  input('post.id/d', 0, 'intval');
    $r = $cc->renew($id);
    $this->ajaxReturn(200, '操作成功');
  }

  /** 我的工作台 */
  public function my_dashboard() {
    $cc = new CrmCustomer();
    $r = $cc->dashboard($this->admininfo->id);
    if (isset($r['perm_top']) && !empty($r['perm_top'])) {
      foreach ($r['perm_top'] as $k => $v) {
        $r['perm_top'][$k]['username'] = model('admin')->where(['id' => $v['sc_id']])->value('username');
      }
    }
    if (isset($r['new_customer_top']) && !empty($r['new_customer_top'])) {
      foreach ($r['new_customer_top'] as $k => $v) {
        $r['new_customer_top'][$k]['username'] = model('admin')->where(['id' => $v['sales_consultant']])->value('username');
      }
    }
    $this->ajaxReturn(200, '', $r);
  }

  /** 超管工作台 */
  public function dashboard() {
    $cc = new CrmCustomer();
    $id =  input('get.sc_id/d', 0, 'intval');
    $r = $cc->dashboard($id);
    if (isset($r['perm_top']) && !empty($r['perm_top'])) {
      foreach ($r['perm_top'] as $k => $v) {
        $r['perm_top'][$k]['username'] = model('admin')->where(['id' => $v['sc_id']])->value('username');
      }
    }
    if (isset($r['new_customer_top']) && !empty($r['new_customer_top'])) {
      foreach ($r['new_customer_top'] as $k => $v) {
        $r['new_customer_top'][$k]['username'] = model('admin')->where(['id' => $v['sales_consultant']])->value('username');
      }
    }
    $this->ajaxReturn(200, '', $r);
  }
}
